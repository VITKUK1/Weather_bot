import asyncio
import logging
import aiohttp
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command

# === üîë –£–∫–∞–∂–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ ===
TOKEN = "7504680458:AAHPQowdVf0OC0l-sSP-gA8exyGKHElQVPI"
WEATHER_API_KEY = "55dfe164f52d5a0d296b486466a7a0fa"
CHAT_ID = "1951583388"  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≥—Ä—É–ø–ø—ã
CITY = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"  # –ì–æ—Ä–æ–¥ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞

# === üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ—Ç–∞ ===
bot = Bot(token=TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

# === üå§Ô∏è –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã ===
async def get_weather(city):
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                temp = data["main"]["temp"]
                weather_desc = data["weather"][0]["description"]
                return f"–°–µ–π—á–∞—Å –≤ {city}: {temp}¬∞C, {weather_desc}"
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É üòî"

# === üïí –§—É–Ω–∫—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã ===
async def send_daily_weather():
    while True:
        try:
            weather = await get_weather(CITY)
            await bot.send_message(CHAT_ID, f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåû\n{weather}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –∫–æ—Ç–∏–∫–∞
            API_KEY = "live_gM1zOn6z760Gh8qtj8nH5lyyRYY356PKrY5aHnVLeCmdT74x8eIi61h7chji66ab"  # –ü–æ–ª—É—á–∏ –∫–ª—é—á –Ω–∞ thecatapi.com
CHAT_ID = "1951583388"
CITY = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"

async def get_random_cat_video():
    url = "https://api.thecatapi.com/v1/images/search?mime_types=video/mp4"
    headers = {"x-api-key": API_KEY}
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=headers) as response:
            if response.status == 200:
                data = await response.json()
                if data:
                    return data[0]["url"]  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
            return None

async def send_daily_weather():
    while True:
        try:
            weather = await get_weather(CITY)
            await bot.send_message(CHAT_ID, f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåû\n{weather}")

            cat_video = await get_random_cat_video()
            if cat_video:
                await bot.send_video(CHAT_ID, cat_video)
            else:
                await bot.send_message(CHAT_ID, "–°–µ–≥–æ–¥–Ω—è –±–µ–∑ –∫–æ—Ç–∏–∫–∞ üòø")

            await asyncio.sleep(86400)  # –ñ–¥—ë–º 24 —á–∞—Å–∞
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(60)  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –∂–¥—ë–º 1 –º–∏–Ω—É—Ç—É

            await asyncio.sleep(86400)  # –ñ–¥—ë–º 24 —á–∞—Å–∞ (86400 —Å–µ–∫—É–Ω–¥)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(60)  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –∂–¥—ë–º 1 –º–∏–Ω—É—Ç—É

# === üì© –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ===
@dp.message(Command("start"))
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ–≥–æ–¥—É –∏ –≤–∏–¥–µ–æ –∫–æ—Ç–∏–∫–∞! üê±üå§Ô∏è")

# === üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    asyncio.create_task(send_daily_weather())  # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())