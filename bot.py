import asyncio
import logging
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
const express = require('express')
const app = express()
const port = 3000

# === üîë API-–∫–ª—é—á–∏ ===
TOKEN = "7504680458:AAHPQowdVf0OC0l-sSP-gA8exyGKHElQVPI"
WEATHER_API_KEY = "55dfe164f52d5a0d296b486466a7a0fa"
CAT_API_KEY = "live_gM1zOn6z760Gh8qtj8nH5lyyRYY356PKrY5aHnVLeCmdT74x8eIi61h7chji66ab"

# === üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ ===
bot = Bot(token=TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

# –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (ID -> –≥–æ—Ä–æ–¥)
user_data = {}
weather_tasks = {}

# === üê± –†–µ–∑–µ—Ä–≤–Ω–æ–µ –≤–∏–¥–µ–æ –∫–æ—Ç–∏–∫–∞ (Telegram File ID) ===
FALLBACK_CAT_VIDEO = "BAACAgIAAxkBAAIBWmYl9TzhxX-2U5lq8u9eXyprlJXRAAItJQAC7_kRS-3FlXJJZ-YjNAQ"

# === üê± –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–¥–µ–æ –∫–æ—Ç–∏–∫–∞ ===
async def get_random_cat_video():
    url = "https://api.thecatapi.com/v1/images/search?mime_types=video/mp4"
    headers = {"x-api-key": CAT_API_KEY}

    for _ in range(3):  # –ü—Ä–æ–±—É–µ–º 3 —Ä–∞–∑–∞
        async with aiohttp.ClientSession() as session:
            try:
                async with session.get(url, headers=headers) as response:
                    if response.status == 200:
                        data = await response.json()
                        for item in data:
                            if item.get("url", "").endswith(".mp4"):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∏–¥–µ–æ
                                return item["url"]
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∏–¥–µ–æ –∫–æ—Ç–∏–∫–∞: {e}")
        
        await asyncio.sleep(1)  # –ñ–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º

    return None  # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None

# === üïí –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã ===
async def send_daily_weather(user_id, city):
    while True:
        try:
            weather = await get_weather(city)
            await bot.send_message(user_id, f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåû\n{weather}")

            cat_video = await get_random_cat_video()
            if cat_video:
                try:
                    await bot.send_video(user_id, cat_video)
                except Exception as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –∫–æ—Ç–∏–∫–∞: {e}")
                    await bot.send_video(user_id, FALLBACK_CAT_VIDEO)
            else:
                await bot.send_video(user_id, FALLBACK_CAT_VIDEO)

            await asyncio.sleep(86400)  # –ñ–¥—ë–º 24 —á–∞—Å–∞
        except asyncio.CancelledError:
            logging.info(f"–ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã –¥–ª—è {user_id} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            break
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ —É {user_id}: {e}")
            await asyncio.sleep(60)

# === üöÄ –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∑–∞–¥–∞—á–∏ —Å –ø–æ–≥–æ–¥–æ–π ===
async def start_weather_task(user_id, city):
    if user_id in weather_tasks and not weather_tasks[user_id].done():
        return  # –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞, –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ

    weather_tasks[user_id] = asyncio.create_task(send_daily_weather(user_id, city))

# === üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
